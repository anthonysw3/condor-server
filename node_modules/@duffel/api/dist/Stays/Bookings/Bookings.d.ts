import { Client } from '../../Client';
import { StaysBooking } from '../StaysTypes';
import { Resource } from '../../Resource';
import { DuffelResponse } from '../../types';
export interface StaysBookingPayload {
    quote_id: string;
    guests: Array<{
        given_name: string;
        family_name: string;
        born_on: string;
    }>;
    email: string;
    phone_number: string;
    accommodation_special_requests?: string;
}
export declare class Bookings extends Resource {
    /**
     * Endpoint path
     */
    path: string;
    constructor(client: Client);
    /**
     * Create a booking
     * @param {object} payload - The booking payload, including quote id and guest information
     */
    create: (payload: StaysBookingPayload) => Promise<DuffelResponse<StaysBooking>>;
    /**
     * Get a booking
     * @param {string} bookingId - The ID of the booking
     */
    get: (bookingId: string) => Promise<DuffelResponse<StaysBooking>>;
    /**
     * List bookings
     */
    list: () => Promise<DuffelResponse<StaysBooking[]>>;
    /**
     * Cancel a booking
     * @param {string} bookingId - The ID of the booking
     */
    cancel: (bookindId: string) => Promise<DuffelResponse<StaysBooking>>;
}
